name: "CaffeNet"
layer {
  name: "data"
  type: "SegData"
  top: "data"
  top: "label"
  include { phase: TRAIN }
  transform_param {
    mirror: true
    crop_size: 512
    mean_value: [104.0, 117.0, 123.0]
    ignore_label: 255
  }
  seg_data_param {
    #source: "/YOUR/PATH/TO/TRAINING/LIST/train.txt"
    source: "/DATA/xhzhan/VOCdevkit/VOC_aug/Lists/Img+Seg/train.txt"
    batch_size: 40
    shuffle: true
    #root_dir: "/YOUR/PATH/TO/DATA/DIRECTORY"
    root_dir: "/DATA/xhzhan/VOCdevkit/VOC_aug"
  }
}
layer {
  name: "patch_sampling"
  type: "Python"
  bottom: "data"
  bottom: "label"
  top: "patches"
  top: "patch_labels"
  python_param {
    module: "sampling_layers"
    layer: "RandomSamplingLayer"
    param_str: "{\"output_size\": 128, \"num\": 400, \"by_ovlp\": False, \"minsz\": 64, \"maxsz\": 256}"
  }
}

#### NETWORK ####
layer {
  name: "conv1_s1"
  type: "Convolution"
  bottom: "patches"
  top: "conv1_s1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    pad: 5
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "batch_conv1"
  type: "BatchNorm"
  bottom: "conv1_s1"
  top: "conv1_s1"
  param { lr_mult: 0 }
  param { lr_mult: 0 }
  param { lr_mult: 0 }
}
layer {
  name: "relu1_s1"
  type: "ReLU"
  bottom: "conv1_s1"
  top: "conv1_s1"
}
layer {
  name: "pool1_s1"
  type: "Pooling"
  bottom: "conv1_s1"
  top: "pool1_s1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "norm1_s1"
  type: "LRN"
  bottom: "pool1_s1"
  top: "norm1_s1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2_s1"
  type: "Convolution"
  bottom: "norm1_s1"
  top: "conv2_s1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "batch_conv2"
  type: "BatchNorm"
  bottom: "conv2_s1"
  top: "conv2_s1"
  param { lr_mult: 0 }
  param { lr_mult: 0 }
  param { lr_mult: 0 }
}
layer {
  name: "relu2_s1"
  type: "ReLU"
  bottom: "conv2_s1"
  top: "conv2_s1"
}
layer {
  name: "pool2_s1"
  type: "Pooling"
  bottom: "conv2_s1"
  top: "pool2_s1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "norm2_s1"
  type: "LRN"
  bottom: "pool2_s1"
  top: "norm2_s1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3_s1"
  type: "Convolution"
  bottom: "norm2_s1"
  top: "conv3_s1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "batch_conv3"
  type: "BatchNorm"
  bottom: "conv3_s1"
  top: "conv3_s1"
  param { lr_mult: 0 }
  param { lr_mult: 0 }
  param { lr_mult: 0 }
}
layer {
  name: "relu3_s1"
  type: "ReLU"
  bottom: "conv3_s1"
  top: "conv3_s1"
}
layer {
  name: "conv4_s1"
  type: "Convolution"
  bottom: "conv3_s1"
  top: "conv4_s1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "batch_conv4"
  type: "BatchNorm"
  bottom: "conv4_s1"
  top: "conv4_s1"
  param { lr_mult: 0 }
  param { lr_mult: 0 }
  param { lr_mult: 0 }
}
layer {
  name: "relu4_s1"
  type: "ReLU"
  bottom: "conv4_s1"
  top: "conv4_s1"
}
layer {
  name: "conv5_s1"
  type: "Convolution"
  bottom: "conv4_s1"
  top: "conv5_s1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "batch_conv5"
  type: "BatchNorm"
  bottom: "conv5_s1"
  top: "conv5_s1"
  param { lr_mult: 0 }
  param { lr_mult: 0 }
  param { lr_mult: 0 }
}
layer {
  name: "relu5_s1"
  type: "ReLU"
  bottom: "conv5_s1"
  top: "conv5_s1"
}
layer {
  name: "pool5_s1"
  type: "Pooling"
  bottom: "conv5_s1"
  top: "pool5_s1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "l2norm"
  type: "Normalize"
  bottom: "pool5_s1"
  top: "feat_norm"
}
layer {
  name: "graph_to_triplet"
  type: "Python"
  bottom: "feat_norm"
  bottom: "patch_labels"
  top: "query"
  top: "pos"
  top: "neg"
  python_param {
    module: "sampling_layers"
    layer: "GraphToTripletLayer"
  }
}
layer {
  name: "triplet_loss"
  type: "TripletLoss"
  bottom: "query"
  bottom: "pos"
  bottom: "neg"
  top: "triplet_loss"
  threshold_param {
    threshold: 2.1
  }
}
